plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id "io.github.gradle-nexus.publish-plugin" version "1.0.0"
}

apply from: "$rootDir/gradle/versioning.gradle"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

group = 'io.github.sogis'

repositories {
    mavenCentral()
    maven { url "http://jars.interlis.ch" }
}

configurations.all {
    resolutionStrategy { 
        force 'ch.interlis:iox-ili:1.20.15'
        force 'ch.interlis:ili2c-tool:5.0.2'
        force 'ch.interlis:ili2c-core:5.0.2'
    }
}

dependencies {
    implementation 'com.vividsolutions:jts-io:1.14.0'
    implementation 'ch.interlis:iox-ili:1.20.15'
    implementation 'ch.interlis:ili2c-tool:5.0.2'
    implementation 'ch.interlis:ili2db:4.3.2'
    implementation 'org.jgrapht:jgrapht-core:1.3.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.1'
}

test {
    useJUnitPlatform()
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

javadoc.failOnError = false
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar

            pom {
                name = "ilivalidator-custom-functions"
                url = "https://github.com/sogis/ilivalidator-custom-functions"
                description = "ilivalidator-custom-functions"
                scm {
                    connection = "scm:git:https@github.com/sogis/ilivalidator-custom-functions"
                    developerConnection = "scm:git:https@github.com/sogis/ilivalidator-custom-functions"
                    url = "https://github.com/sogis/ilivalidator-custom-functions"
                }
                licenses {
                    license {
                        name = "MIT"
                        url = "https://github.com/sogis/ilivalidator-custom-functions/blob/master/LICENSE"
                    }
                }
                developers {
                    developer {
                        id = "edigonzales"
                        name = "Stefan Ziegler"
                    }
                }
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

nexusPublishing {
    repositories {
        sonatype { 
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
            username = findProperty("ossrhUsername") ?: System.getenv("OSSRH_USERNAME")
            password = findProperty("ossrhPassword") ?: System.getenv("OSSRH_PASSWORD")
        }
    }
}
